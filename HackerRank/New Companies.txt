Given the table schemas below, write a query to print the company_code, founder name, total number of lead managers, total number of senior managers, total number of managers, and total number of employees. Order your output by ascending company_code.
Note:
* The tables may contain duplicate records.
* The company_code is string, so the sorting should not be numeric. For example, if the company_codes are C_1, C_2, and C_10, then the ascending company_codes will be C_1, C_10, and C_2.


My answer: Wrong

SELECT MAX(Company.company_code),MAX(Company.founder), COUNT(DISTINCT l.lead_manager_code), COUNT(DISTINCT s.senior_manager_code), COUNT(DISTINCT m.manager_code), COUNT(DISTINCT e.manager_code)
FROM Company JOIN Lead_Manager l ON Company.company_code = l.company_code
JOIN Senior_Manager s ON s.company_code = l.company_code
JOIN Manager m ON m.company_code = s.company_code
JOIN Employee e ON e.company_code = Company.company_code
GROUP BY Company.company_code
ORDER BY Company.company_code

Other answer:

select c.company_code, c.founder, 
count(distinct l.lead_manager_code), 
count(distinct s.senior_manager_code), 
count( distinct m.manager_code), 
count( distinct e.employee_code)
from ( 
company c join lead_manager l on c.company_code = l.company_code
join senior_manager s on s.lead_manager_code  = l.lead_manager_code 
join manager m on m.senior_manager_code  = s.senior_manager_code 
join employee e on e.manager_code = m.manager_code
)
group by c.company_code, c.founder
order by c.company_code